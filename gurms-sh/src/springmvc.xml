<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd  
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

	<!-- COC配置  -->
	<bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping">
		<property name="interceptors">
			<bean class="org.gurms.web.spring.ControllerInterceptor">
				<property name="ignoreSession" value="validscript,validcode,login" />
			</bean>
		</property>
	</bean>

	<!-- 使用annocation创建Controller的bean -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
    	<property name="messageConverters">
    		<list>
    			<ref bean="mappingJacksonHttpMessageConverter"/>
    		</list>
    	</property>
    </bean>
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />   

	<!-- spring upload 组件，必须有id="multipartResolver"  -->	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <property name="maxUploadSize">
            <value>104857600</value>
        </property>
        <property name="maxInMemorySize">
            <value>4096</value>
        </property>
    </bean>
    
   	
   	<!-- 自动搜索@Controller标注的类 -->
	<context:component-scan base-package="org.gurms.web.controller" />

	<!-- 将指定URL 的匹配模式来访问静态文件 -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<!-- 将指定路径的请求直接转到对应的view上，而不需要特定的controller来处理请求 -->
	<mvc:view-controller path="/welcome" view-name="welcome"/>
	<mvc:view-controller path="/login" view-name="login"/>
	
	<!--使用freemarker的resolver-->
	<bean id="freemarkerViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
		<property name="cache" value="false" />
		<property name="suffix" value=".ftl" />
		<property name="contentType" value="text/html;charset=utf-8" />
		<!-- 设置模板里是否可以直接取request的属性 值为true就是允许 --> 
		<property name="exposeRequestAttributes" value="true" /> 
		<!-- 设置模板里是否可以直接取session的属性 值为true就是允许 -->
        <property name="exposeSessionAttributes" value="true" />
		<!-- 如果你需要使用Spring 对 FreeMarker 宏命令的支持, 将这个属性设为true -->
		<property name="exposeSpringMacroHelpers" value="true" />
	</bean>
	
	<!-- 这里定义freemarker.properties文件的加载，和后面的对应。 -->
	<bean id="freemarkerConfiguration" class="org.springframework.beans.factory.config.PropertiesFactoryBean">  
 		<property name="location" value="classpath:freemarker.properties"/>  
	</bean>
	
	<!-- ftl设置-->
	<bean id="freemarkerConfig" class="org.gurms.web.spring.FreeMarkerConfigurerExt">
		<property name="templateLoaderPath" value="/WEB-INF/ftl/"/> 
		<property name="freemarkerSettings" ref="freemarkerConfiguration"/>
	</bean>	
	
	<!-- 指定扩展的配置文件 springmvc-ext.properties-->
	<bean class="org.springframework.web.servlet.view.ResourceBundleViewResolver">  
	    <property name="order" value="2" />  
	    <property name="basename" value="springmvc-ext" />  
	</bean>
	
    <!-- 使用JSP 的resolver-->
	<!-- 
     <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
         <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />  
         <property name="prefix" value="/pages" />  
         <property name="suffix" value=".jsp" />  
     </bean>  
	 -->
</beans>